@page "/cards"
@using TopTrumps.Data.DTOs
@using TopTrumps.Data.Services
@using TopTrumps.WebApp.Components


@inject ICardsService _cardsService

@attribute [Authorize(Roles = "Admin")]

<h3>
    Cards
</h3>


<div class="row">
    <div class="col-12">
        <div class="input-group">
            <div class="form-outline">
                <label class="form-label" for="form1">Search</label>
                <input type="text" @bind="SearchTerm" @bind:event="oninput" />
            </div>
        </div>
    </div>


    <div class="col-12">
        <NavLink class="btn btn-primary float-right" href="/cards/new">
            <span class="oi oi-home" aria-hidden="true"></span> Add New Card
        </NavLink>
    </div>
</div>
<br />


<div class="row">
    @foreach (var card in _cards)
    {
        <div @onclick="@(() => ShowModal(card.Id))" class="top-trumps-card">
            <div class="top-trumps-card-inner">
                <div style="background: url(@card.ImageUrl) no-repeat; background-size: contain; width: 100%; height: 50%; border-radius: 12px;">
                </div>
                <h4 class="card-title">@card.Name</h4>
                <hr class="title">
                <h5 class="card-type">@card.Type</h5>
                <table class="table">
                    <tr class="table-row">
                        <td>ABV</td>
                        <td>@card.ABV</td>
                    </tr>
                    <tr class="table-row">
                        <td>ACCESSIBILITY</td>
                        <td>@card.Accessibility</td>
                    </tr>
                    <tr class="table-row">
                        <td>REPUTATION</td>
                        <td>@card.Reputation</td>
                    </tr>
                    <tr class="table-row">
                        <td>POPULARITY</td>
                        <td>@card.Popularity</td>
                    </tr>
                </table>
            </div>
        </div>
    }
</div>




@code
{
    [CascadingParameter] public IModalService ModalService { get; set; }

    private IEnumerable<Card> _cards = new List<Card>();

    protected override async Task OnInitializedAsync()
    {
        _cards = (await _cardsService.GetAllCards()).Where(x => x.Name.Contains(SearchTerm, StringComparison.CurrentCultureIgnoreCase));
    }

    async Task ShowModal(int cardId)
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(cardId), cardId);

        ModalService.Show<FullCard>("My Card", parameters);

    }

    string SearchTerm = "";

}
